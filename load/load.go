package main

import (
	"fmt"
	"io/ioutil"
	"net/http"
	"net/url"
	"strconv"
	"strings"
)

func main() {
	for i := 10010; i < 10020; i++ {
		sendPost1(i)

		//sendPost2(i)

	}

}

func sendPost1(i int) {
	apiUrl := "https://user.ljyh.funwin.cn/TakeAward/takePartAward"
	data := url.Values{}
	data.Set("take_id", "19")
	data.Set("type", "3")

	client := &http.Client{}
	r, _ := http.NewRequest("POST", apiUrl, strings.NewReader(data.Encode())) // URL-encoded payload
	r.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	r.Header.Add("Authorization", "Bearer "+strconv.Itoa(i))

	resp, err := client.Do(r)
	if err != nil {
		fmt.Println(err.Error())
		return
	}
	defer resp.Body.Close()

	body, _ := ioutil.ReadAll(resp.Body)

	fmt.Println(string(body))

}

func sendPost2(i int) {
	apiUrl := "https://user.ljyh.funwin.cn/TakeAward/drawTake"
	data := url.Values{}
	data.Set("conditionId", "973610")

	client := &http.Client{}
	r, _ := http.NewRequest("POST", apiUrl, strings.NewReader(data.Encode())) // URL-encoded payload
	r.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	r.Header.Add("Authorization", "Bearer "+strconv.Itoa(i))

	resp, err := client.Do(r)
	if err != nil {
		fmt.Println(err.Error())
		return
	}
	defer resp.Body.Close()

	body, _ := ioutil.ReadAll(resp.Body)
	fmt.Println(string(body))

}

type AutoGenerated1 struct {
	ErrorCode int    `json:"error_code"`
	Message   string `json:"message"`
	Data      struct {
		ID           string        `json:"id"`
		TakeID       string        `json:"take_id"`
		ConditionID  string        `json:"condition_id"`
		TakeType     string        `json:"take_type"`
		ShareIndex   string        `json:"share_index"`
		ShareMax     string        `json:"share_max"`
		Status       string        `json:"status"`
		HelpUserInfo []interface{} `json:"help_userInfo"`
	} `json:"data"`
}

type AutoGenerated2 struct {
	ErrorCode int    `json:"error_code"`
	Message   string `json:"message"`
	Data      struct {
		TakeID       string        `json:"take_id"`
		TakeType     string        `json:"take_type"`
		ShareIndex   int           `json:"share_index"`
		ShareMax     int           `json:"share_max"`
		Status       int           `json:"status"`
		ID           int           `json:"id"`
		HelpUserInfo []interface{} `json:"help_userInfo"`
		TakeInfo     struct {
			Title string `json:"title"`
			Thumb string `json:"thumb"`
			H5URL struct {
				UserName string `json:"userName"`
				Path     string `json:"path"`
				H5URL    string `json:"h5_url"`
			} `json:"h5_url"`
		} `json:"take_info"`
	} `json:"data"`
}
